name: Rpclib CI
on:
  - push
  - pull_request
jobs:
  run:
    name: Tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        # windows-latest async does not support it for now
        operating-system: [macos-latest, ubuntu-latest]
        ocaml-version: [ '5.3.0', '5.2.0', '4.14.2' ]
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Cache pip
      uses: actions/cache@v4
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit
        key: ${{ runner.os }}-pip
        restore-keys: |
          ${{ runner.os }}-
    - name: Install Python dependencies
      run: pip install pylint pycodestyle
    - name: Install OCaml
      uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: ${{ matrix.ocaml-version }}
    - name: Install OCaml dependencies
      run: opam install -t ./ppx_deriving_rpc.opam ./rpclib-html.opam ./rpclib-js.opam ./rpclib-lwt.opam ./rpclib.opam --deps-only
    - name: Build and test independently
      run: opam install -t rpclib rpclib-js rpclib-html rpclib-lwt
    - name: Run Rpc and Ppx_deriving_rpc Tests
      run: opam exec -- dune runtest -p ppx_deriving_rpc
    - name: Build and run Examples
      run: opam exec -- dune build @runexamples -p ppx_deriving_rpc
    - if: ${{ matrix.ocaml-version >= '5.3.0' }}
      name: Install OCaml dependencies (Async)
      run: opam install -t ./rpclib-async.opam --deps-only
    - if: ${{ matrix.ocaml-version >= '5.3.0' }}
      name: Build and test independently (Async)
      run: opam install -t rpclib-async
